{"ast":null,"code":"import _objectSpread from\"/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import'./App.css';// Components\nimport ChatInterface from'./components/ChatInterface';import SuggestionButtons from'./components/SuggestionButtons';import ItineraryCard from'./components/ItineraryCard';import FlightResults from'./components/FlightResults';import HotelResults from'./components/HotelResults';import ActivityResults from'./components/ActivityResults';// Icons\nimport{Plane,Menu,X,MessageSquare,History}from'lucide-react';// Backend API URL\n// TODO: Replace with environment variable for production deployment\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_BACKEND_URL||'http://localhost:8001';function App(){// State management\nconst[messages,setMessages]=useState([]);const[suggestions,setSuggestions]=useState([]);const[currentItinerary,setCurrentItinerary]=useState(null);const[isLoading,setIsLoading]=useState(false);const[threadId,setThreadId]=useState('default');const[sessions,setSessions]=useState([]);const[showSidebar,setShowSidebar]=useState(false);const[error,setError]=useState(null);// Mock data for tool results (flights, hotels, activities)\n// These are extracted from AI responses\nconst[toolResults,setToolResults]=useState({flights:null,hotels:null,activities:null});// Load sessions on mount\nuseEffect(()=>{loadSessions();},[]);// API call to send chat message\n// TODO: Backend Integration Point\n// - This currently calls /api/chat endpoint\n// - In production, add authentication headers\n// - Handle rate limiting and retries\nconst sendMessage=async query=>{setIsLoading(true);setError(null);try{// Add user message to UI immediately\nconst userMessage={type:'user',content:query,timestamp:new Date().toISOString()};setMessages(prev=>[...prev,userMessage]);// Call backend API\nconst response=await axios.post(\"\".concat(API_URL,\"/api/chat\"),{query,thread_id:threadId,user_preferences:{}// TODO: Add user preferences from settings\n});// Add AI response to messages\nconst aiMessage={type:'ai',content:response.data.response,timestamp:response.data.timestamp};setMessages(prev=>[...prev,aiMessage]);// Update suggestions\nsetSuggestions(response.data.suggestions||[]);// Update current itinerary if available\nif(response.data.current_itinerary){setCurrentItinerary(response.data.current_itinerary);}// Extract tool results from response\n// TODO: Backend should return structured tool_results in response\nextractToolResults(response.data);}catch(err){var _err$response,_err$response$data;console.error('Error sending message:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Failed to send message. Please try again.');// Add error message to chat\nconst errorMessage={type:'ai',content:'Sorry, I encountered an error processing your request. Please try again.',timestamp:new Date().toISOString()};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);}};// API call to handle suggestion selection\n// TODO: Backend Integration Point\n// - Calls /api/suggestion endpoint\n// - Track analytics on suggestion usage\nconst handleSuggestionSelect=async token=>{setIsLoading(true);setError(null);try{// Add user selection message\nconst userMessage={type:'user',content:\"Selected: \".concat(token),timestamp:new Date().toISOString()};setMessages(prev=>[...prev,userMessage]);// Call backend API\nconst response=await axios.post(\"\".concat(API_URL,\"/api/suggestion\"),{token,thread_id:threadId});// Add AI response\nconst aiMessage={type:'ai',content:response.data.response,timestamp:response.data.timestamp};setMessages(prev=>[...prev,aiMessage]);// Update suggestions\nsetSuggestions(response.data.suggestions||[]);// Update current itinerary\nif(response.data.current_itinerary){setCurrentItinerary(response.data.current_itinerary);}// Extract tool results\nextractToolResults(response.data);}catch(err){var _err$response2,_err$response2$data;console.error('Error handling suggestion:',err);setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.detail)||'Failed to process suggestion. Please try again.');}finally{setIsLoading(false);}};// Extract mock tool results from response\n// TODO: Backend should return structured data in tool_results field\n// For now, we'll use mock data when certain keywords are detected\nconst extractToolResults=data=>{const content=data.response.toLowerCase();// Mock flight data\nif(content.includes('flight')){setToolResults(prev=>_objectSpread(_objectSpread({},prev),{},{flights:generateMockFlights()}));}// Mock hotel data\nif(content.includes('hotel')||content.includes('accommodation')){setToolResults(prev=>_objectSpread(_objectSpread({},prev),{},{hotels:generateMockHotels()}));}// Mock activity data\nif(content.includes('activity')||content.includes('activities')){setToolResults(prev=>_objectSpread(_objectSpread({},prev),{},{activities:generateMockActivities()}));}};// Load all sessions\n// TODO: Backend Integration Point\n// - Query from Supabase user_sessions table\n// - Filter by authenticated user\nconst loadSessions=async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/api/sessions\"));setSessions(response.data||[]);}catch(err){console.error('Error loading sessions:',err);}};// Switch to a different session\nconst switchSession=newThreadId=>{setThreadId(newThreadId);setMessages([]);setSuggestions([]);setCurrentItinerary(null);setToolResults({flights:null,hotels:null,activities:null});setShowSidebar(false);// TODO: Load session history from backend\n// const session = await axios.get(`${API_URL}/api/session/${newThreadId}`);\n};// Create new session\nconst createNewSession=()=>{const newThreadId=\"session_\".concat(Date.now());switchSession(newThreadId);};// Mock data generators\n// TODO: Remove these when real API integrations are complete\nconst generateMockFlights=()=>[{airline:'Japan Airlines',flight_number:'JAL001',origin:'SFO',destination:'NRT',departure_time:'10:30 AM',arrival_time:'2:15 PM (+1)',duration:'11h 45m',price:850,class:'Economy',stops:0,seats_available:12},{airline:'ANA',flight_number:'NH007',origin:'SFO',destination:'NRT',departure_time:'1:00 PM',arrival_time:'4:45 PM (+1)',duration:'11h 45m',price:820,class:'Economy',stops:0,seats_available:8},{airline:'United Airlines',flight_number:'UA837',origin:'SFO',destination:'NRT',departure_time:'11:00 AM',arrival_time:'3:00 PM (+1)',duration:'12h 00m',price:780,class:'Economy',stops:0,seats_available:20}];const generateMockHotels=()=>[{name:'Tokyo Grand Hotel',location:'Shinjuku, Tokyo',rating:4.5,price_per_night:150,description:'Modern hotel in the heart of Tokyo with stunning city views',amenities:['Free WiFi','Breakfast included','Gym','Restaurant']},{name:'Sakura Inn',location:'Shibuya, Tokyo',rating:4.2,price_per_night:120,description:'Boutique hotel with traditional Japanese design',amenities:['Free WiFi','Onsen','Tea ceremony room']},{name:'Business Plaza Tokyo',location:'Ginza, Tokyo',rating:4.0,price_per_night:100,description:'Affordable hotel perfect for budget travelers',amenities:['Free WiFi','Breakfast','24/7 reception']}];const generateMockActivities=()=>[{name:'Tokyo Food Tour',category:'food',duration:'3 hours',location:'Tsukiji Market',price:75,description:'Explore Tokyo\\'s best street food and local delicacies',group_size:'Small group (max 10)'},{name:'Senso-ji Temple Visit',category:'culture',duration:'2 hours',location:'Asakusa',price:25,description:'Guided tour of Tokyo\\'s oldest temple',group_size:'Medium group'},{name:'Mt. Fuji Day Trip',category:'adventure',duration:'Full day',location:'Mt. Fuji',price:150,description:'Scenic tour to Japan\\'s iconic mountain',group_size:'Large group'},{name:'Tokyo Nightlife Experience',category:'nightlife',duration:'4 hours',location:'Roppongi',price:90,description:'Experience Tokyo\\'s vibrant nightlife',group_size:'Small group'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"App min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white border-b border-gray-200 px-4 py-4 sticky top-0 z-50 shadow-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSidebar(!showSidebar),className:\"lg:hidden p-2 hover:bg-gray-100 rounded-lg\",children:showSidebar?/*#__PURE__*/_jsx(X,{className:\"w-6 h-6\"}):/*#__PURE__*/_jsx(Menu,{className:\"w-6 h-6\"})}),/*#__PURE__*/_jsx(Plane,{className:\"w-8 h-8 text-primary-600\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-800\",children:\"AI Travel Planner\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:createNewSession,className:\"btn-primary text-sm flex items-center gap-2\",\"data-testid\":\"new-session-btn\",children:[/*#__PURE__*/_jsx(MessageSquare,{className:\"w-4 h-4\"}),\"New Trip\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex max-w-7xl mx-auto\",children:[/*#__PURE__*/_jsx(\"aside\",{className:\"\".concat(showSidebar?'block':'hidden',\" lg:block w-64 bg-white border-r border-gray-200 h-[calc(100vh-80px)] overflow-y-auto\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(History,{className:\"w-5 h-5 text-gray-600\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"font-semibold text-gray-800\",children:\"Trip History\"})]}),sessions.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:sessions.map(session=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>switchSession(session.thread_id),className:\"w-full text-left p-3 rounded-lg transition-colors \".concat(session.thread_id===threadId?'bg-primary-100 text-primary-800 border border-primary-300':'bg-gray-50 hover:bg-gray-100 text-gray-700'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm truncate\",children:session.thread_id}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:new Date(session.last_active).toLocaleDateString()}),session.has_itinerary&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Has itinerary\"})]},session.thread_id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 text-center py-8\",children:[\"No trips yet.\",/*#__PURE__*/_jsx(\"br\",{}),\"Start planning!\"]})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex-1 flex flex-col h-[calc(100vh-80px)]\",children:[error&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 mx-4 mt-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Error:\"}),\" \",error]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto\",children:[/*#__PURE__*/_jsx(ChatInterface,{messages:messages,onSendMessage:sendMessage,isLoading:isLoading}),currentItinerary&&/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-6\",children:/*#__PURE__*/_jsx(ItineraryCard,{itinerary:currentItinerary})}),/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 pb-6\",children:[toolResults.flights&&/*#__PURE__*/_jsx(FlightResults,{flights:toolResults.flights}),toolResults.hotels&&/*#__PURE__*/_jsx(HotelResults,{hotels:toolResults.hotels}),toolResults.activities&&/*#__PURE__*/_jsx(ActivityResults,{activities:toolResults.activities})]})]}),/*#__PURE__*/_jsx(SuggestionButtons,{suggestions:suggestions,onSelectSuggestion:handleSuggestionSelect,isLoading:isLoading})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 border-t border-gray-300 px-4 py-3 text-center text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDEA7 MVP Version:\"}),\" Using mock data for flights, hotels, and activities.\",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-primary-700\",children:\" Phase 2: Supabase integration\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","ChatInterface","SuggestionButtons","ItineraryCard","FlightResults","HotelResults","ActivityResults","Plane","Menu","X","MessageSquare","History","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_BACKEND_URL","App","messages","setMessages","suggestions","setSuggestions","currentItinerary","setCurrentItinerary","isLoading","setIsLoading","threadId","setThreadId","sessions","setSessions","showSidebar","setShowSidebar","error","setError","toolResults","setToolResults","flights","hotels","activities","loadSessions","sendMessage","query","userMessage","type","content","timestamp","Date","toISOString","prev","response","post","concat","thread_id","user_preferences","aiMessage","data","current_itinerary","extractToolResults","err","_err$response","_err$response$data","console","detail","errorMessage","handleSuggestionSelect","token","_err$response2","_err$response2$data","toLowerCase","includes","_objectSpread","generateMockFlights","generateMockHotels","generateMockActivities","get","switchSession","newThreadId","createNewSession","now","airline","flight_number","origin","destination","departure_time","arrival_time","duration","price","class","stops","seats_available","name","location","rating","price_per_night","description","amenities","category","group_size","className","children","onClick","length","map","session","last_active","toLocaleDateString","has_itinerary","onSendMessage","itinerary","onSelectSuggestion"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Components\nimport ChatInterface from './components/ChatInterface';\nimport SuggestionButtons from './components/SuggestionButtons';\nimport ItineraryCard from './components/ItineraryCard';\nimport FlightResults from './components/FlightResults';\nimport HotelResults from './components/HotelResults';\nimport ActivityResults from './components/ActivityResults';\n\n// Icons\nimport { Plane, Menu, X, MessageSquare, History } from 'lucide-react';\n\n// Backend API URL\n// TODO: Replace with environment variable for production deployment\nconst API_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\nfunction App() {\n  // State management\n  const [messages, setMessages] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [currentItinerary, setCurrentItinerary] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [threadId, setThreadId] = useState('default');\n  const [sessions, setSessions] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Mock data for tool results (flights, hotels, activities)\n  // These are extracted from AI responses\n  const [toolResults, setToolResults] = useState({\n    flights: null,\n    hotels: null,\n    activities: null\n  });\n\n  // Load sessions on mount\n  useEffect(() => {\n    loadSessions();\n  }, []);\n\n  // API call to send chat message\n  // TODO: Backend Integration Point\n  // - This currently calls /api/chat endpoint\n  // - In production, add authentication headers\n  // - Handle rate limiting and retries\n  const sendMessage = async (query) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Add user message to UI immediately\n      const userMessage = {\n        type: 'user',\n        content: query,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Call backend API\n      const response = await axios.post(`${API_URL}/api/chat`, {\n        query,\n        thread_id: threadId,\n        user_preferences: {} // TODO: Add user preferences from settings\n      });\n\n      // Add AI response to messages\n      const aiMessage = {\n        type: 'ai',\n        content: response.data.response,\n        timestamp: response.data.timestamp\n      };\n      setMessages(prev => [...prev, aiMessage]);\n\n      // Update suggestions\n      setSuggestions(response.data.suggestions || []);\n\n      // Update current itinerary if available\n      if (response.data.current_itinerary) {\n        setCurrentItinerary(response.data.current_itinerary);\n      }\n\n      // Extract tool results from response\n      // TODO: Backend should return structured tool_results in response\n      extractToolResults(response.data);\n\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError(err.response?.data?.detail || 'Failed to send message. Please try again.');\n      \n      // Add error message to chat\n      const errorMessage = {\n        type: 'ai',\n        content: 'Sorry, I encountered an error processing your request. Please try again.',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // API call to handle suggestion selection\n  // TODO: Backend Integration Point\n  // - Calls /api/suggestion endpoint\n  // - Track analytics on suggestion usage\n  const handleSuggestionSelect = async (token) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Add user selection message\n      const userMessage = {\n        type: 'user',\n        content: `Selected: ${token}`,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Call backend API\n      const response = await axios.post(`${API_URL}/api/suggestion`, {\n        token,\n        thread_id: threadId\n      });\n\n      // Add AI response\n      const aiMessage = {\n        type: 'ai',\n        content: response.data.response,\n        timestamp: response.data.timestamp\n      };\n      setMessages(prev => [...prev, aiMessage]);\n\n      // Update suggestions\n      setSuggestions(response.data.suggestions || []);\n\n      // Update current itinerary\n      if (response.data.current_itinerary) {\n        setCurrentItinerary(response.data.current_itinerary);\n      }\n\n      // Extract tool results\n      extractToolResults(response.data);\n\n    } catch (err) {\n      console.error('Error handling suggestion:', err);\n      setError(err.response?.data?.detail || 'Failed to process suggestion. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Extract mock tool results from response\n  // TODO: Backend should return structured data in tool_results field\n  // For now, we'll use mock data when certain keywords are detected\n  const extractToolResults = (data) => {\n    const content = data.response.toLowerCase();\n    \n    // Mock flight data\n    if (content.includes('flight')) {\n      setToolResults(prev => ({\n        ...prev,\n        flights: generateMockFlights()\n      }));\n    }\n    \n    // Mock hotel data\n    if (content.includes('hotel') || content.includes('accommodation')) {\n      setToolResults(prev => ({\n        ...prev,\n        hotels: generateMockHotels()\n      }));\n    }\n    \n    // Mock activity data\n    if (content.includes('activity') || content.includes('activities')) {\n      setToolResults(prev => ({\n        ...prev,\n        activities: generateMockActivities()\n      }));\n    }\n  };\n\n  // Load all sessions\n  // TODO: Backend Integration Point\n  // - Query from Supabase user_sessions table\n  // - Filter by authenticated user\n  const loadSessions = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/api/sessions`);\n      setSessions(response.data || []);\n    } catch (err) {\n      console.error('Error loading sessions:', err);\n    }\n  };\n\n  // Switch to a different session\n  const switchSession = (newThreadId) => {\n    setThreadId(newThreadId);\n    setMessages([]);\n    setSuggestions([]);\n    setCurrentItinerary(null);\n    setToolResults({ flights: null, hotels: null, activities: null });\n    setShowSidebar(false);\n    \n    // TODO: Load session history from backend\n    // const session = await axios.get(`${API_URL}/api/session/${newThreadId}`);\n  };\n\n  // Create new session\n  const createNewSession = () => {\n    const newThreadId = `session_${Date.now()}`;\n    switchSession(newThreadId);\n  };\n\n  // Mock data generators\n  // TODO: Remove these when real API integrations are complete\n  const generateMockFlights = () => [\n    {\n      airline: 'Japan Airlines',\n      flight_number: 'JAL001',\n      origin: 'SFO',\n      destination: 'NRT',\n      departure_time: '10:30 AM',\n      arrival_time: '2:15 PM (+1)',\n      duration: '11h 45m',\n      price: 850,\n      class: 'Economy',\n      stops: 0,\n      seats_available: 12\n    },\n    {\n      airline: 'ANA',\n      flight_number: 'NH007',\n      origin: 'SFO',\n      destination: 'NRT',\n      departure_time: '1:00 PM',\n      arrival_time: '4:45 PM (+1)',\n      duration: '11h 45m',\n      price: 820,\n      class: 'Economy',\n      stops: 0,\n      seats_available: 8\n    },\n    {\n      airline: 'United Airlines',\n      flight_number: 'UA837',\n      origin: 'SFO',\n      destination: 'NRT',\n      departure_time: '11:00 AM',\n      arrival_time: '3:00 PM (+1)',\n      duration: '12h 00m',\n      price: 780,\n      class: 'Economy',\n      stops: 0,\n      seats_available: 20\n    }\n  ];\n\n  const generateMockHotels = () => [\n    {\n      name: 'Tokyo Grand Hotel',\n      location: 'Shinjuku, Tokyo',\n      rating: 4.5,\n      price_per_night: 150,\n      description: 'Modern hotel in the heart of Tokyo with stunning city views',\n      amenities: ['Free WiFi', 'Breakfast included', 'Gym', 'Restaurant']\n    },\n    {\n      name: 'Sakura Inn',\n      location: 'Shibuya, Tokyo',\n      rating: 4.2,\n      price_per_night: 120,\n      description: 'Boutique hotel with traditional Japanese design',\n      amenities: ['Free WiFi', 'Onsen', 'Tea ceremony room']\n    },\n    {\n      name: 'Business Plaza Tokyo',\n      location: 'Ginza, Tokyo',\n      rating: 4.0,\n      price_per_night: 100,\n      description: 'Affordable hotel perfect for budget travelers',\n      amenities: ['Free WiFi', 'Breakfast', '24/7 reception']\n    }\n  ];\n\n  const generateMockActivities = () => [\n    {\n      name: 'Tokyo Food Tour',\n      category: 'food',\n      duration: '3 hours',\n      location: 'Tsukiji Market',\n      price: 75,\n      description: 'Explore Tokyo\\'s best street food and local delicacies',\n      group_size: 'Small group (max 10)'\n    },\n    {\n      name: 'Senso-ji Temple Visit',\n      category: 'culture',\n      duration: '2 hours',\n      location: 'Asakusa',\n      price: 25,\n      description: 'Guided tour of Tokyo\\'s oldest temple',\n      group_size: 'Medium group'\n    },\n    {\n      name: 'Mt. Fuji Day Trip',\n      category: 'adventure',\n      duration: 'Full day',\n      location: 'Mt. Fuji',\n      price: 150,\n      description: 'Scenic tour to Japan\\'s iconic mountain',\n      group_size: 'Large group'\n    },\n    {\n      name: 'Tokyo Nightlife Experience',\n      category: 'nightlife',\n      duration: '4 hours',\n      location: 'Roppongi',\n      price: 90,\n      description: 'Experience Tokyo\\'s vibrant nightlife',\n      group_size: 'Small group'\n    }\n  ];\n\n  return (\n    <div className=\"App min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200 px-4 py-4 sticky top-0 z-50 shadow-sm\">\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <button\n              onClick={() => setShowSidebar(!showSidebar)}\n              className=\"lg:hidden p-2 hover:bg-gray-100 rounded-lg\"\n            >\n              {showSidebar ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n            </button>\n            <Plane className=\"w-8 h-8 text-primary-600\" />\n            <h1 className=\"text-2xl font-bold text-gray-800\">AI Travel Planner</h1>\n          </div>\n          <button\n            onClick={createNewSession}\n            className=\"btn-primary text-sm flex items-center gap-2\"\n            data-testid=\"new-session-btn\"\n          >\n            <MessageSquare className=\"w-4 h-4\" />\n            New Trip\n          </button>\n        </div>\n      </header>\n\n      <div className=\"flex max-w-7xl mx-auto\">\n        {/* Sidebar - Session History */}\n        <aside\n          className={`${\n            showSidebar ? 'block' : 'hidden'\n          } lg:block w-64 bg-white border-r border-gray-200 h-[calc(100vh-80px)] overflow-y-auto`}\n        >\n          <div className=\"p-4\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <History className=\"w-5 h-5 text-gray-600\" />\n              <h2 className=\"font-semibold text-gray-800\">Trip History</h2>\n            </div>\n            \n            {sessions.length > 0 ? (\n              <div className=\"space-y-2\">\n                {sessions.map((session) => (\n                  <button\n                    key={session.thread_id}\n                    onClick={() => switchSession(session.thread_id)}\n                    className={`w-full text-left p-3 rounded-lg transition-colors ${\n                      session.thread_id === threadId\n                        ? 'bg-primary-100 text-primary-800 border border-primary-300'\n                        : 'bg-gray-50 hover:bg-gray-100 text-gray-700'\n                    }`}\n                  >\n                    <div className=\"font-medium text-sm truncate\">{session.thread_id}</div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {new Date(session.last_active).toLocaleDateString()}\n                    </div>\n                    {session.has_itinerary && (\n                      <div className=\"text-xs text-green-600 mt-1\">✓ Has itinerary</div>\n                    )}\n                  </button>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-sm text-gray-500 text-center py-8\">\n                No trips yet.<br />Start planning!\n              </div>\n            )}\n          </div>\n        </aside>\n\n        {/* Main Content Area */}\n        <main className=\"flex-1 flex flex-col h-[calc(100vh-80px)]\">\n          {/* Error Display */}\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 mx-4 mt-4 rounded-lg\">\n              <strong>Error:</strong> {error}\n            </div>\n          )}\n\n          {/* Results Display Area */}\n          <div className=\"flex-1 overflow-y-auto\">\n            {/* Chat Interface */}\n            <ChatInterface\n              messages={messages}\n              onSendMessage={sendMessage}\n              isLoading={isLoading}\n            />\n\n            {/* Itinerary Display */}\n            {currentItinerary && (\n              <div className=\"px-4 py-6\">\n                <ItineraryCard itinerary={currentItinerary} />\n              </div>\n            )}\n\n            {/* Tool Results Display */}\n            <div className=\"px-4 pb-6\">\n              {toolResults.flights && <FlightResults flights={toolResults.flights} />}\n              {toolResults.hotels && <HotelResults hotels={toolResults.hotels} />}\n              {toolResults.activities && <ActivityResults activities={toolResults.activities} />}\n            </div>\n          </div>\n\n          {/* Suggestion Buttons */}\n          <SuggestionButtons\n            suggestions={suggestions}\n            onSelectSuggestion={handleSuggestionSelect}\n            isLoading={isLoading}\n          />\n        </main>\n      </div>\n\n      {/* Footer Note */}\n      <div className=\"bg-gray-100 border-t border-gray-300 px-4 py-3 text-center text-sm text-gray-600\">\n        <strong>🚧 MVP Version:</strong> Using mock data for flights, hotels, and activities. \n        <span className=\"font-medium text-primary-700\"> Phase 2: Supabase integration</span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}